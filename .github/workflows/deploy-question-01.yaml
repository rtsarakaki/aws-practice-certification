name: Deploy to AWS

on:
  pull_request:
    branches:
      - main
    types: [closed]

jobs:
  create_stacks:
    if: github.event.pull_request.merged == true && github.event.pull_request.base.ref == 'main' && github.event.pull_request.head.ref == 'develop'
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ vars.AWS_REGION }}


    - name: Create permissions boundary stack
      uses: ./actions/manage-cloudformation-stacks
      with:
        stack_name: "question01-permissions-boundary-stack"
        template_path: "practice-questions/security/question-01/permissions-boundary.yaml"
        aws_region: ${{ vars.AWS_REGION }}
        user_password: ${{ secrets.USER_PASSWORD }}

    - name: Create identity based policy stack
      uses: ./actions/manage-cloudformation-stacks
      with:
        stack_name: "question01-identity-based-policy-stack"
        template_path: "practice-questions/security/question-01/identity-based-policy.yaml"
        aws_region: ${{ vars.AWS_REGION }}
        user_password: ${{ secrets.USER_PASSWORD }}

    - name: Create ACL stack
      uses: ./actions/manage-cloudformation-stacks
      with:
        stack_name: "question01-acl"
        template_path: "practice-questions/security/question-01/acl.yaml"
        aws_region: ${{ vars.AWS_REGION }}
        user_password: ${{ secrets.USER_PASSWORD }}

  upload_objects:
    needs: create_stacks
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ vars.AWS_REGION }}

    - name: Run ACL upload script
      run: |
        chmod +x practice-questions/security/question-01/acl-upload-objects.sh
        practice-questions/security/question-01/acl-upload-objects.sh